{"mappings":"ACAA,IAAM,KAAO,SAAS,aAAa,CAAC,kBAC9B,WAAa,KAAK,aAAa,CAAC,0BAEhC,MAAQ,gBACR,QAAU,cAgFhB,SAAS,UAAU,CAAO,CAAE,CAAO,EACjC,IAAM,EAAU,SAAS,aAAa,CAAC,IACvC,CAAA,EAAQ,SAAS,CAAG,aACpB,EAAQ,WAAW,CAAG,EACtB,EAAQ,WAAW,CAAC,EACtB,CAnFA,KAAK,gBAAgB,CAAC,SAAU,MAAO,IACrC,EAAE,cAAc,GAEhB,IAAM,EAAW,KAAK,gBAAgB,CAAC,iBACnC,EAAW,CAAA,EAgCf,GA9BA,EAAS,OAAO,CAAC,AAAC,IAChB,IAAM,EAAQ,EAAQ,aAAa,CAAC,SAChC,EAAU,EAAQ,aAAa,CAAC,cAEhC,CAAA,GAAS,EAAQ,MAAM,GAEtB,EAAM,KAAK,CAAC,IAAI,GAInB,AAAe,QAAf,EAAM,IAAI,EACT,oCAAoC,IAAI,CAAC,EAAM,KAAK,CAAC,IAAI,IAIlC,UAAf,EAAM,IAAI,EAAiB,EAAM,KAAK,CAAC,IAAI,KACpD,UAAU,EAAS,8BACnB,EAAW,CAAA,IAJX,UAAU,EAAS,8BACnB,EAAW,CAAA,IAPX,UAAU,EAAS,mCACnB,EAAW,CAAA,GAaR,EAAM,OAAO,CAAC,QAAQ,GACzB,EAAM,gBAAgB,CAAC,QAAS,KAC9B,IAAM,EAAM,EAAQ,aAAa,CAAC,cAC9B,CAAA,GAAK,EAAI,MAAM,EACrB,GACA,EAAM,OAAO,CAAC,QAAQ,CAAG,OAE7B,GAEI,EAAU,MAEd,CAAA,WAAW,WAAW,CAAG,cACzB,WAAW,QAAQ,CAAG,CAAA,EAEtB,IAAM,EAAW,IAAI,SAAS,MACxB,EAAO,EAAS,GAAG,CAAC,QAAQ,IAAI,GAChC,EAAM,EAAS,GAAG,CAAC,OAAO,IAAI,GAC9B,EAAQ,EAAS,GAAG,CAAC,SAAS,IAAI,GAKlC,EAAU;AAClB,2BAAS,EAAE;AACX,uDAAa,EAAE;AACf,kDAAoB,EAAE;AACpB,EAAA,CAAC,CAED,GAAI,CACF,IAAM,EAAM,sEAAqD,AAO7D,CANa,CAAA,MAAM,MAAM,EAAK,CAChC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAAC,CAAE,QAbZ,cAa6B,KAAM,CAAQ,EACxD,EAAA,EAEa,EAAE,EACb,MAAM,6BACN,KAAK,KAAK,IAEV,MAAM,6BAEV,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,GACd,MAAM,oBACR,QAAU,CACR,WAAW,WAAW,CAAG,mBACzB,WAAW,QAAQ,CAAG,CAAA,CACxB,CACF","sources":["<anon>","js/callback-form.js"],"sourcesContent":["const form = document.querySelector(\".callback-form\");\nconst formButton = form.querySelector(\".callback-form__button\");\nconst TOKEN = \"\\u0422\\u0443\\u0442 \\u0432\\u0430\\u0448 \\u0442\\u043E\\u043A\\u0435\\u043D\";\nconst CHAT_ID = \"\\u0422\\u0443\\u0442 chat_id\";\nform.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    const controls = form.querySelectorAll(\".form-control\");\n    let hasError = false;\n    controls.forEach((control)=>{\n        const input = control.querySelector(\"input\");\n        let errorEl = control.querySelector(\".form-error\");\n        if (errorEl) errorEl.remove();\n        if (!input.value.trim()) {\n            showError(control, \"\\u041F\\u043E\\u043B\\u0435 \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F\");\n            hasError = true;\n        } else if (input.name === \"tel\" && !/^\\+7 \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$/.test(input.value.trim())) {\n            showError(control, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u044B\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\");\n            hasError = true;\n        } else if (input.name === \"email\" && !input.value.trim()) {\n            showError(control, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043E\\u0447\\u0442\\u0443 \\u0438\\u043B\\u0438 Telegram\");\n            hasError = true;\n        }\n        // вешаем обработчик на ввод (один раз)\n        if (!input.dataset.listener) {\n            input.addEventListener(\"input\", ()=>{\n                const err = control.querySelector(\".form-error\");\n                if (err) err.remove();\n            });\n            input.dataset.listener = \"true\";\n        }\n    });\n    if (hasError) return;\n    formButton.textContent = \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\";\n    formButton.disabled = true;\n    const formData = new FormData(form);\n    const name = formData.get(\"name\").trim();\n    const tel = formData.get(\"tel\").trim();\n    const email = formData.get(\"email\").trim();\n    const botToken = \"\\u0412\\u0410\\u0428_BOT_TOKEN\";\n    const chatId = \"\\u0412\\u0410\\u0428_CHAT_ID\";\n    const message = `\n    \\u{418}\\u{43C}\\u{44F}: ${name}\n    \\u{422}\\u{435}\\u{43B}\\u{435}\\u{444}\\u{43E}\\u{43D}: ${tel}\n    \\u{41F}\\u{43E}\\u{447}\\u{442}\\u{430}/Telegram: ${email}\n  `;\n    try {\n        const url = `https://api.telegram.org/bot${botToken}/sendMessage`;\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                chat_id: chatId,\n                text: message\n            })\n        });\n        if (response.ok) {\n            alert(\"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430!\");\n            form.reset();\n        } else alert(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0435 \\u0444\\u043E\\u0440\\u043C\\u044B.\");\n    } catch (error) {\n        console.error(error);\n        alert(\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430.\");\n    } finally{\n        formButton.textContent = \"\\u0421\\u0432\\u044F\\u0437\\u0430\\u0442\\u044C\\u0441\\u044F \\u0441 \\u043D\\u0430\\u043C\\u0438\";\n        formButton.disabled = false;\n    }\n});\nfunction showError(control, message) {\n    const errorEl = document.createElement(\"p\");\n    errorEl.className = \"form-error\";\n    errorEl.textContent = message;\n    control.appendChild(errorEl);\n}\n\n//# sourceMappingURL=ultima-landing.9d08083c.js.map\n","const form = document.querySelector(\".callback-form\");\nconst formButton = form.querySelector(\".callback-form__button\");\n\nconst TOKEN = \"Тут ваш токен\";\nconst CHAT_ID = \"Тут chat_id\";\n\nform.addEventListener(\"submit\", async (e) => {\n  e.preventDefault();\n\n  const controls = form.querySelectorAll(\".form-control\");\n  let hasError = false;\n\n  controls.forEach((control) => {\n    const input = control.querySelector(\"input\");\n    let errorEl = control.querySelector(\".form-error\");\n\n    if (errorEl) errorEl.remove();\n\n    if (!input.value.trim()) {\n      showError(control, \"Поле обязательно для заполнения\");\n      hasError = true;\n    } else if (\n      input.name === \"tel\" &&\n      !/^\\+7 \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$/.test(input.value.trim())\n    ) {\n      showError(control, \"Введите корректный телефон\");\n      hasError = true;\n    } else if (input.name === \"email\" && !input.value.trim()) {\n      showError(control, \"Введите почту или Telegram\");\n      hasError = true;\n    }\n\n    // вешаем обработчик на ввод (один раз)\n    if (!input.dataset.listener) {\n      input.addEventListener(\"input\", () => {\n        const err = control.querySelector(\".form-error\");\n        if (err) err.remove();\n      });\n      input.dataset.listener = \"true\";\n    }\n  });\n\n  if (hasError) return;\n\n  formButton.textContent = \"Загрузка...\";\n  formButton.disabled = true;\n\n  const formData = new FormData(form);\n  const name = formData.get(\"name\").trim();\n  const tel = formData.get(\"tel\").trim();\n  const email = formData.get(\"email\").trim();\n\n  const botToken = \"ВАШ_BOT_TOKEN\";\n  const chatId = \"ВАШ_CHAT_ID\";\n\n  const message = `\n    Имя: ${name}\n    Телефон: ${tel}\n    Почта/Telegram: ${email}\n  `;\n\n  try {\n    const url = `https://api.telegram.org/bot${botToken}/sendMessage`;\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ chat_id: chatId, text: message }),\n    });\n\n    if (response.ok) {\n      alert(\"Форма успешно отправлена!\");\n      form.reset();\n    } else {\n      alert(\"Ошибка при отправке формы.\");\n    }\n  } catch (error) {\n    console.error(error);\n    alert(\"Произошла ошибка.\");\n  } finally {\n    formButton.textContent = \"Связаться с нами\";\n    formButton.disabled = false;\n  }\n});\n\nfunction showError(control, message) {\n  const errorEl = document.createElement(\"p\");\n  errorEl.className = \"form-error\";\n  errorEl.textContent = message;\n  control.appendChild(errorEl);\n}\n"],"names":["form","document","querySelector","formButton","TOKEN","CHAT_ID","showError","control","message","errorEl","createElement","className","textContent","appendChild","addEventListener","e","preventDefault","controls","querySelectorAll","hasError","forEach","input","remove","value","trim","name","test","dataset","listener","err","disabled","formData","FormData","get","tel","email","url","response","fetch","method","headers","body","JSON","stringify","chat_id","text","ok","alert","reset","error","console"],"version":3,"file":"ultima-landing.9d08083c.js.map"}