{"mappings":"ACqEA,SAAS,aAAa,CAAK,EAEzB,IAAM,EAAS,AADK,KAAK,KAAK,CAAC,OAAO,CAAC,iBACb,CAAC,EAAM,CAEjC,GAAI,CAAC,EAAQ,OAEb,IAAM,EAAU,cAAc,OAAO,CAAC,CAAC,KAAK,EAAE,EAAA,CAAO,EAErD,GAAI,EACF,KAAK,EAAE,CAAC,OAAQ,CACd,SAAU,IACV,KAAM,aACN,SAAU,CACR,EACE,EAAQ,KAAK,CACZ,CAAA,OAAO,UAAU,EAAI,IAClB,AAAqB,IAArB,OAAO,WAAW,CAClB,AAAqB,GAArB,OAAO,WAAW,AAAG,EAC3B,SAAU,CAAA,CACZ,EACA,SAAU,IAAM,cAAc,MAAM,EACtC,OACK,CAEL,IAAM,EAAU,EAAO,qBAAqB,GAAG,GAAG,CAAG,OAAO,OAAO,CACnE,KAAK,EAAE,CAAC,OAAQ,CACd,SAAU,GACV,KAAM,aACN,SAAU,EACV,SAAU,IAAM,cAAc,MAAM,EACtC,EACF,CACF,CArGA,OAAO,gBAAgB,CAAC,OAAQ,KAC9B,IAAM,EAAc,KAAK,KAAK,CAAC,OAAO,CAAC,kBACvC,GAAI,CAAC,EAAY,MAAM,CAAE,OAGzB,IAAM,EAAe,AADN,SAAS,aAAa,CAAC,qBACV,YAAY,CAClC,EAAU,OAAO,UAAU,CAAG,IAAM,GAAK,GACzC,EACJ,OAAO,UAAU,CAAG,IAAM,CAAC,IAAM,IAAM,KAAO,EAAE,CAAG,CAAC,GAAK,IAAM,IAAM,EAAE,CACnE,EAAW,OAAO,UAAU,CAAG,IAErC,EAAY,OAAO,CAAC,CAAC,EAAM,KACzB,EAAK,KAAK,CAAC,UAAU,CAAG,YAExB,KAAK,GAAG,CAAC,EAAM,CACb,SAAU,SACV,IAAK,AAHU,EAAe,EAAU,EAGxB,KAChB,QAAS,CAAA,EACT,EAAG,CACL,GAEA,IAAM,EAAW,CAAW,CAAC,EAAQ,EAAE,CACnC,GAKF,KAAK,MAAM,CACT,EACA,CAAE,MAAO,CAAE,EACX,CACE,MAAO,CAAW,CAAC,EAAM,CACzB,gBAAiB,aACjB,QAAS,CAAA,EACT,EAAG,EACH,cAAe,CACb,QAAS,EACT,MAbc,EAAW,kBAAoB,kBAc7C,IAbY,UAcZ,MAAO,EAAW,GAAM,EACxB,GAAI,CAAC,KAAK,EAAE,EAAA,CAAO,AACrB,CACF,EAGN,GAEA,OAAO,gBAAgB,CAAC,SAAU,KAChC,cAAc,OAAO,CAAC,CAAA,EACxB,EACF,GAEA,OAAO,gBAAgB,CAAC,OAAQ,KAC9B,KAAK,IAAI,CAAC,iBAAkB,CAC1B,EAAG,GACH,QAAS,EACT,SAAU,KACV,MAAO,GACP,KAAM,YACR,GAEA,KAAK,IAAI,CAAC,UAAW,CACnB,EAAG,KACH,QAAS,EACT,SAAU,KACV,KAAM,YACR,EACF","sources":["<anon>","js/animations.js"],"sourcesContent":["window.addEventListener(\"load\", ()=>{\n    const dmGsapCards = gsap.utils.toArray(\".dm-gsap-cards\");\n    if (!dmGsapCards.length) return;\n    const header = document.querySelector(\".services__navbar\");\n    const headerHeight = header.clientHeight;\n    const topStep = window.innerWidth < 768 ? 10 : 20;\n    const finalScales = window.innerWidth < 768 ? [\n        0.95,\n        0.97,\n        0.985,\n        1\n    ] : [\n        0.9,\n        0.93,\n        0.96,\n        1\n    ];\n    const isMobile = window.innerWidth < 768;\n    dmGsapCards.forEach((card, index)=>{\n        card.style.willChange = \"transform\";\n        const topValue = headerHeight + topStep * index;\n        gsap.set(card, {\n            position: \"sticky\",\n            top: topValue + \"px\",\n            force3D: true,\n            z: 0\n        });\n        const nextCard = dmGsapCards[index + 1];\n        if (nextCard) {\n            // Определяем диапазон скролла следующей карточки\n            const startOffset = isMobile ? \"top+=50% bottom\" : \"top+=70% bottom\";\n            const endOffset = \"top top\";\n            gsap.fromTo(card, {\n                scale: 1\n            }, {\n                scale: finalScales[index],\n                transformOrigin: \"top center\",\n                force3D: true,\n                z: 0,\n                scrollTrigger: {\n                    trigger: nextCard,\n                    start: startOffset,\n                    end: endOffset,\n                    scrub: isMobile ? 0.5 : 1,\n                    id: `card-${index}`\n                }\n            });\n        }\n    });\n    window.addEventListener(\"resize\", ()=>{\n        ScrollTrigger.refresh(true);\n    });\n});\nwindow.addEventListener(\"load\", ()=>{\n    gsap.from(\".hero__content\", {\n        y: 70,\n        opacity: 0,\n        duration: 1.35,\n        delay: 0.8,\n        ease: \"power2.out\"\n    });\n    gsap.from(\".header\", {\n        y: -150,\n        opacity: 0,\n        duration: 1.35,\n        ease: \"power2.out\"\n    });\n});\nfunction scrollToCard(index) {\n    const dmGsapCards = gsap.utils.toArray(\".dm-gsap-cards\");\n    const target = dmGsapCards[index];\n    if (!target) return;\n    const trigger = ScrollTrigger.getById(`card-${index}`);\n    if (trigger) gsap.to(window, {\n        duration: 0.05,\n        ease: \"power2.out\",\n        scrollTo: {\n            y: trigger.start - (window.innerWidth <= 768 ? window.innerHeight * 0.45 : window.innerHeight * 0.2),\n            autoKill: false\n        },\n        onUpdate: ()=>ScrollTrigger.update()\n    });\n    else {\n        // fallback: прокрутка по позиции элемента\n        const targetY = target.getBoundingClientRect().top + window.scrollY;\n        gsap.to(window, {\n            duration: 0.1,\n            ease: \"power2.out\",\n            scrollTo: targetY,\n            onUpdate: ()=>ScrollTrigger.update()\n        });\n    }\n}\n\n//# sourceMappingURL=ultima-landing.b8771a28.js.map\n","window.addEventListener(\"load\", () => {\n  const dmGsapCards = gsap.utils.toArray(\".dm-gsap-cards\");\n  if (!dmGsapCards.length) return;\n\n  const header = document.querySelector(\".services__navbar\");\n  const headerHeight = header.clientHeight;\n  const topStep = window.innerWidth < 768 ? 10 : 20;\n  const finalScales =\n    window.innerWidth < 768 ? [0.95, 0.97, 0.985, 1] : [0.9, 0.93, 0.96, 1];\n  const isMobile = window.innerWidth < 768;\n\n  dmGsapCards.forEach((card, index) => {\n    card.style.willChange = \"transform\";\n    const topValue = headerHeight + topStep * index;\n    gsap.set(card, {\n      position: \"sticky\",\n      top: topValue + \"px\",\n      force3D: true,\n      z: 0,\n    });\n\n    const nextCard = dmGsapCards[index + 1];\n    if (nextCard) {\n      // Определяем диапазон скролла следующей карточки\n      const startOffset = isMobile ? \"top+=50% bottom\" : \"top+=70% bottom\";\n      const endOffset = \"top top\";\n\n      gsap.fromTo(\n        card,\n        { scale: 1 },\n        {\n          scale: finalScales[index],\n          transformOrigin: \"top center\",\n          force3D: true,\n          z: 0,\n          scrollTrigger: {\n            trigger: nextCard,\n            start: startOffset,\n            end: endOffset,\n            scrub: isMobile ? 0.5 : 1, // плавная анимация\n            id: `card-${index}`,\n          },\n        }\n      );\n    }\n  });\n\n  window.addEventListener(\"resize\", () => {\n    ScrollTrigger.refresh(true);\n  });\n});\n\nwindow.addEventListener(\"load\", () => {\n  gsap.from(\".hero__content\", {\n    y: 70,\n    opacity: 0,\n    duration: 1.35,\n    delay: 0.8,\n    ease: \"power2.out\",\n  });\n\n  gsap.from(\".header\", {\n    y: -150,\n    opacity: 0,\n    duration: 1.35,\n    ease: \"power2.out\",\n  });\n});\n\nfunction scrollToCard(index) {\n  const dmGsapCards = gsap.utils.toArray(\".dm-gsap-cards\");\n  const target = dmGsapCards[index];\n\n  if (!target) return;\n\n  const trigger = ScrollTrigger.getById(`card-${index}`);\n\n  if (trigger) {\n    gsap.to(window, {\n      duration: 0.05,\n      ease: \"power2.out\",\n      scrollTo: {\n        y:\n          trigger.start -\n          (window.innerWidth <= 768\n            ? window.innerHeight * 0.45\n            : window.innerHeight * 0.2), \n        autoKill: false,\n      },\n      onUpdate: () => ScrollTrigger.update(),\n    });\n  } else {\n    // fallback: прокрутка по позиции элемента\n    const targetY = target.getBoundingClientRect().top + window.scrollY;\n    gsap.to(window, {\n      duration: 0.1,\n      ease: \"power2.out\",\n      scrollTo: targetY,\n      onUpdate: () => ScrollTrigger.update(),\n    });\n  }\n}\n"],"names":["scrollToCard","index","target","dmGsapCards","gsap","utils","toArray","trigger","ScrollTrigger","getById","to","window","duration","ease","scrollTo","y","start","innerWidth","innerHeight","autoKill","onUpdate","update","targetY","getBoundingClientRect","top","scrollY","addEventListener","length","headerHeight","header","document","querySelector","clientHeight","topStep","finalScales","isMobile","forEach","card","style","willChange","set","position","topValue","force3D","z","nextCard","fromTo","scale","transformOrigin","scrollTrigger","end","scrub","id","refresh","from","opacity","delay"],"version":3,"file":"ultima-landing.b8771a28.js.map"}